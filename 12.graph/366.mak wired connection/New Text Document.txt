    void dfs(int v,vector<int> graph[],vector<int> &vis)
    {
        vis[v]=1;
        for(auto x:graph[v])
        {
            if(vis[x]==0)
                dfs(x,graph,vis);
        }
    }
    int makeConnected(int n, vector<vector<int>>& connections) {
        vector<int> graph[n];
        int m=connections.size();
        if(m<n-1)return -1;
        for(int i=0;i<m;i++)
        {
            graph[connections[i][0]].push_back(connections[i][1]);
            graph[connections[i][1]].push_back(connections[i][0]);
        }
        vector<int> vis(n,0);
        int count=0;
        for(int i=0;i<n;i++)
        {
            if(vis[i]==0)
            {
                count++;
                dfs(i,graph,vis);
            }
        }
        return count-1;
    }