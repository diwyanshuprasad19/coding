    vector<string> v;
    void solve(int i,int j,string s,vector<vector<int>> &vis,vector<vector<int>> m,int n)
    {
        if(i<0 || j<0)return;
        if(i>=n || j>=n)return;
        if(m[i][j]==0 || vis[i][j]==1)return;
        if(i==n-1&& j==n-1)
        {
            v.push_back(s);
            return;
        }
        vis[i][j]=1;
        solve(i-1,j,s+'U',vis,m,n);
        solve(i+1,j,s+'D',vis,m,n);
        solve(i,j-1,s+'L',vis,m,n);
        solve(i,j+1,s+'R',vis,m,n);
        vis[i][j]=0;
    }
    vector<string> findPath(vector<vector<int>> &m, int n) {
        vector<vector<int>> vis(n,vector<int>(n));
        string s="";
        if(m[0][0]==0)return v;
        if(m[n-1][n-1]==0)return v;
        solve(0,0,s,vis,m,n);
        sort(v.begin(),v.end());
        return v;
    }