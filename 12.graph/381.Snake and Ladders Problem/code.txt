    int minThrow(int N, int arr[]){
        
        int moves[35];
        bool vis[35];
        memset(moves,-1,sizeof(moves));
        memset(vis,false,sizeof(vis));
        
        for(int i=0;i<2*N;i=i+2)
        {
            moves[arr[i]] = arr[i+1];
        }
        
        queue<pair<int,int>> q;
        pair<int,int> p;
        
        q.push({1,0});
        vis[1]=true;
        
        while(q.empty()==false)
        {
            p=q.front();
            int cell=p.first;
            int turn=p.second;
            if(cell==30)
            break;
            q.pop();
            
            for(int i=cell+1;i<=cell+6 && i<=30;i++)
            {
                pair<int,int> pp;
                if(vis[i]==false)
                {
                    pp.second=turn+1;
                    if(moves[i]!=-1)
                    {
                        pp.first=moves[i];
                    }
                    else
                    {
                        pp.first=i;
                    }
                    vis[i]=true;
                    q.push(pp);
                }
            
                
            }
            return p.second;
            
            
            
        }
        
        
        
    }