#include<bits/stdc++.h>

long countWaysToMakeChange(int *denominations, int n, int value)
{
    vector<vector<long>> dp(n,vector<long>(value+1,0));
   for(int target=0;target<=value;target++)
   {
       if(target%denominations[0]==0)dp[0][target]=1;
   }
    for(int index=1;index<n;index++)
    {
        for(int target=0;target<=value;target++)
        {
            long nottake=dp[index-1][target];
            long take=0;
            if(denominations[index]<=target)
                take=dp[index][target-denominations[index]];
            dp[index][target]=nottake+take;
        }
    }
    return dp[n-1][value];
}