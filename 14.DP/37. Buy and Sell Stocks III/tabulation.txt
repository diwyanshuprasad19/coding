#include<bits/stdc++.h>

int maxProfit(vector<int>& prices, int n)
{
    vector<vector<vector<int>>> dp(n+1,vector<vector<int>>(2,vector<int>(3,0)));
    /*
  for(int index=0;index<=n;index++)
  {
      for(int buy=0;buy<=1;buy++)
      {
          dp[index][buy][0]=0;
      }
  }
    
    for(int buy=0;buy<=1;buy++)
    {
        for(int cap=0;cap<=2;cap++)
        {
            dp[0][buy][cap]=0;
        }
    }
    */
    //dont need base case as 0 needed and 0 already there.
    for(int index=n-1;index>=0;index--)
    {
        for(int buy=0;buy<=1;buy++)
        {
            for(int cap=1;cap<=2;cap++)//cap=1 start as 0 cap-1 will give negative value
            {
                int profit1,profit2;
                if(buy)
                {
                    profit1=-prices[index]+dp[index+1][0][cap];
                    profit2=0+dp[index+1][1][cap];
                }
                else
                {
                    profit1=prices[index]+dp[index+1][1][cap-1];
                    profit2=0+dp[index+1][0][cap];
                }
                dp[index][buy][cap]=max(profit1,profit2);
            }
        }
    }
    return dp[0][1][2];
}