#include<bits/stdc++.h>
bool solve(int i,int j,string s1,string s2,vector<vector<int>> &dp)
{
    if(i<0 && j<0)return true;
    if(i<0 && j>=0)return false;
    if(j<0 && i>=0)
    {
        for(int k=0;k<=i;k++)
        {
            if(s1[k]!='*')return false;
        }
        return true;
    }
    if(dp[i][j]!=-1)return dp[i][j];
    if(s1[i]==s2[j] || s1[i]=='?')
        return dp[i][j]=solve(i-1,j-1,s1,s2,dp);
    else if(s1[i]=='*')
        return dp[i][j]=solve(i-1,j,s1,s2,dp)||solve(i,j-1,s1,s2,dp);
    else
        return dp[i][j]=false;
}
bool wildcardMatching(string pattern, string text)
{
    int m=text.length();
    int n=pattern.length();
    vector<vector<int>> dp(n,vector<int>(m,-1));
bool b=solve(n-1,m-1,pattern,text,dp);
    return b;
}