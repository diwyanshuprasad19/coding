#include<bits/stdc++.h>
int getMaxPathSum(vector<vector<int>> &matrix)
{
    int n=matrix.size();
    int m=matrix[0].size();
    int count=-1e8;
          vector<vector<int>> dp(n,vector<int>(m,-1));
    // here dp just push as nowhere  we are putting or comparing sp.hence 
    //just put value max of down,ld,rd.
    for(int i=0;i<m;i++)
    {
        dp[0][i]=matrix[0][i];
    }
    for(int i=1;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            int down=-1e8,rd=-1e8,ld=-1e8;
            if(j-1>=0)ld=matrix[i][j]+dp[i-1][j-1];
            if(j+1<m)rd=matrix[i][j]+dp[i-1][j+1];
            dp[i][j]=max(down,max(ld,rd));
        }
    }
    for(int i=0;i<m;i++)
    {
        count=max(count,dp[n-1][i]);
    }
    return count;
}