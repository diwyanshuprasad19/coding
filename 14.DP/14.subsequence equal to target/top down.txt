#include<bits/stdc++.h>
bool solve(int index,int target,vector<int> &arr,vector<vector<int>> & dp)
{
    if(target==0) return true;
    if(index==0)return(arr[index]==target);
    if(dp[index][target]!=-1)return dp[index][target];
    bool nottake=solve(index-1,target,arr,dp);
    bool take=false;
    if(target>=arr[index])
        take=solve(index-1,target-arr[index],arr,dp);
    return dp[index][target]=nottake || take;
}
bool subsetSumToK(int n, int k, vector<int> &arr) {
    vector<vector<int>> dp(n,vector<int>(k+1,-1));
    bool ans=solve(n-1,k,arr,dp);
    return ans;
}