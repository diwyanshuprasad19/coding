5. Longest Palindromic Substring
on leetcode number

https://www.youtube.com/watch?v=ZJUGtWObroc
best expaliantion

class Solution {
public:
    string longestPalindrome(string s) {
        int start = 0, end = 0;
        for(int i =0; i<s.length(); i++){
            int len1 = expandCenter(s, i, i);
            int len2 = expandCenter(s, i, i+1);
            int len = max(len1, len2);
            if(len>end-start){
                start = i - (len-1)/2;
                end = i+len/2;

            }
        }
        return s.substr(start, end-start+1);
    }
    int expandCenter(string s, int left, int right){
        while(left>=0 && right<s.length() && s[left]==s[right]){
            left--;
            right++;

        }
        return right-left -1;
    }
};

Time complexity:
We have to potentially check every substring of the input string, which can take O(n^2) time in the worst case.

Space complexity:
O(1)