    static bool comp(pair<double,int> a,pair<double,int> b){
        return a.first>b.first;
    }
    double fractionalKnapsack(int W, Item arr[], int n)
    {
       vector<pair<double,int>> v(n);
       for(int i=0;i<n;i++)
       {
           double x=(arr[i].value*1.0)/(arr[i].weight*1.0);
           v[i]={x,i};
       }
       sort(v.begin(),v.end(),comp);
       
       int s=0;
       double profit=0;
       for(int i=0;i<n;i++)
       {
           if(s+arr[v[i].second].weight<=W)
           {
               profit+=(arr[v[i].second].value);
               s+=arr[v[i].second].weight;
           }
           else
           {
               int remain=(W-s);
               profit+=v[i].first*remain;
               break;
           }
       }
       return profit;
    }