    static bool comp(pair<int,int> a,pair<int,int> b){
        return a.first<b.first;
    }
    
    int findPlatform(int arr[], int dep[], int n)
    {
    	vector<pair<int,int>> v(n);
    	for(int i=0;i<n;i++)
    	{
    	    v[i]={arr[i],dep[i]};
    	}
    	sort(v.begin(),v.end(),comp);
    	
    	priority_queue<pair<int,int>,vector<pair<int,int>> ,greater<pair<int,int>>> q;
    	
    	q.push({v[0].second,1});
    	int maxplat=1;
    	for(int i=1;i<n;i++)
    	{
    	    auto a=q.top();
    	    if(v[i].first>a.first)
    	    {
    	        q.pop();
    	        q.push({v[i].second,a.second});
    	    }
    	    else
    	    {
    	        q.push({v[i].second,maxplat+1});
    	        maxplat++;
    	    }
    	}
    	return maxplat;
    }