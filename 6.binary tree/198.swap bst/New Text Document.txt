https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/description/ 
ans:
    TreeNode* construct(vector<int>& nums,int s,int e)
    {
        if(s>e){
            return nullptr;
        }
        int mid=s+(e-s)/2;
        TreeNode* root=new TreeNode(nums[mid]);
        root->left=construct(nums,s,mid-1);
        root->right=construct(nums,mid+1,e);
        return root;
    }
public:
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        return construct(nums,0,nums.size()-1);
    }

time compelxity:O(n)

   void bst(Node* root,vector<int>v,int &i)
    {
        if(root==NULL)return;
        bst(root->left,v,i);
        root->data=v[i];
        i++;
        bst(root->right,v,i);
    }
    void inorder(Node* root,vector<int> &v)
    {
        if(root==NULL)return;
        inorder(root->left,v);
        v.push_back(root->data);
        inorder(root->right,v);
     }
    Node *binaryTreeToBST (Node *root)
    {
       vector<int>v;
       inorder(root,v);
       sort(v.begin(),v.end());
       int i=0;
       bst(root,v,i);
       return root;
    }

