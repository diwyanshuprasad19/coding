    int largestRectangleArea(vector<int>& heights) {
        int n=heights.size();
       stack<int> s;
        
        stack<int> s1;
        
        int left[n],right[n];
        //left small
        for(int i=0;i<n;i++)
        {
            while(s.empty()==false && heights[s.top()] >=heights[i])
                s.pop();
            if(s.empty()==true)left[i]=0;
            else left[i]=s.top()+1;
            s.push(i);
        }
        //right small
           for(int i=n-1;i>=0;i--)
        {
            while(s1.empty()==false && heights[s1.top()] >=heights[i])
                s1.pop();
            if(s1.empty()==true)right[i]=n-1;
            else right[i]=s1.top()-1;
            s1.push(i);
        }
        
        int m=0;
        for(int i=0;i<n;i++)
        {
            m=max(m,heights[i]*(right[i]-left[i]+1));
        }
        return m;
    }