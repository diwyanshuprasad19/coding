class Solution {
public:

    void dfs(int i, vector<vector<int>>& v, vector<int>& vis){
        vis[i]=1;
        for(auto x:v[i]){
            if(!vis[x]){
                dfs(x,v,vis);
            }
        }
    }
    vector<vector<int>> getAncestors(int n, vector<vector<int>>& edges) {
        vector<vector<int>> v(n),ans(n);
        for(auto x:edges){
            v[x[0]].push_back(x[1]);
        }

        for(int i=0;i<n;i++){
            vector<int> vis(n,0);
            dfs(i,v,vis);
            for(int j=0;j<n;j++){
                if(i==j)continue;
                if(vis[j])
                ans[j].push_back(i);
            }
        }
        return ans;

    }
};

TC:O(v+e)
SC:O(v+e)